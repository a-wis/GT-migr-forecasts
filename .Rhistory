# switch = "y") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "right")
pq3=Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
# coord_polar() +
# coord_radar() +
facet_grid(Or~.,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "right")
pq3
Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "right")
Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(valstd)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1 %>%
filter(domain!="other", Or!="Other",Or!="Northern America") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(valstd)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1 %>%
filter(domain!="other", Or!="Other",Or!="Northern America") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup()
Q1aux= Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Or,domain) %>%
summarise(total=sum(value)) %>%
ungroup()
Q1aux %>% group_by(Or) %>%
summarise(tot_count=sum(total)) %>%
ungroup() %>%
right_join(Q1aux) %>%
mutate(totstd = total/tot_count) %>%
ggplot() +
geom_bar(aes(x=cat,y=totstd,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1aux %>% group_by(Or) %>%
summarise(tot_count=sum(total)) %>%
ungroup() %>%
right_join(Q1aux) %>%
mutate(totstd = total/tot_count) %>%
ggplot() +
geom_bar(aes(x=cat,y=totstd,fill=domain), size=0.5, stat = "identity") +
# coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1aux %>% group_by(Or) %>%
summarise(tot_count=sum(total)) %>%
ungroup() %>%
right_join(Q1aux) %>%
mutate(totstd = total/tot_count) %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Or,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
Q1aux= Q1 %>%
filter(domain!="other", Or!="Other") %>%
group_by(cat,Dest,domain) %>%
summarise(total=sum(value)) %>%
ungroup()
Q1aux %>% group_by(Dest) %>%
summarise(tot_count=sum(total)) %>%
ungroup() %>%
right_join(Q1aux) %>%
mutate(totstd = total/tot_count) %>%
ggplot() +
geom_bar(aes(x=cat,y=total,fill=domain), size=0.5, stat = "identity") +
coord_polar() +
# coord_radar() +
facet_grid(.~Dest,
labeller = label_wrap_gen(width = 15,multi_line = T),
switch = "y", scales = "fixed") +
theme_bw() +
labs(y="count of votes",x="driver of migration") +
# labs(y="count of votes",x="driver/motivation") +
theme(legend.position = "none")
exp(-0.62)
exp(0.62)
1/exp(0.62)
1/exp(-0.62)
exp(10)
x
x=rlnorm(100000,1,0.05)
median(x)
sd(x)
sd(x)/median(x)
sd(x)/mean(x)
x=rlnorm(10000000,1,0.05)
sd(x)/mean(x)
sd(x)/median(x)
quantile(x,c(0.025,0.5,0.975))
quantile(x,c(0.025,0.5,0.975))[3]/median(x)
quantile(x,c(0.025,0.5,0.975))[3]/mean(x)
quantile(x,c(0.025,0.5,0.975))[1]/mean(x)
quantile(x,c(0.025,0.5,0.975))[1]/median(x)
x=rlnorm(10000000,1,0.2)
quantile(x,c(0.025,0.5,0.975))[1]/median(x)
quantile(x,c(0.025,0.5,0.975))[3]/median(x)
x=rlnorm(10000000,1,0.15)
quantile(x,c(0.025,0.5,0.975))[3]/median(x)
quantile(x,c(0.025,0.5,0.975))[1]/median(x)
qnorm(0.025)
exp(1)*(0.15)^qnorm(0.025)
exp(1+0.15*qnorm(0.025))
quantile(x,c(0.025,0.5,0.975))[1]
quantile(x,c(0.025,0.5,0.975))
exp(1+0.15*qnorm(0.975))
qnorm(0.025)
qnorm(0.975)
qnorm(0.5)
exp(0.05)
sqrt(exp(0.05)-1)
sqrt(exp(0.05^2)-1)
sqrt(exp(0.1^2)-1)
sqrt(exp(0.5^2)-1)
sqrt(exp(0.01^2)-1)
1/5000
1/1000
1/2000
1/5000^2
1/5000^.5
1/1111^.5
1/50^.5
mtcars
mod=lm(mpg~cyl,data=mtcars)
mod$residuals
View(mod$residuals)
View(mod$df.residual)
mod=lm(mpg~gear,data=mtcars)
mod
mod=lm(mpg~factor(gear),data=mtcars)
mod
load("C:/Users/msassaw5/Dropbox (The University of Manchester)/Research/Modelling Bikes - Manchester 2020/Code/R Code/LSOA/GreaterManchester_LSOA.Rda")
library(tidyverse)
library(viridis)
library(ggspatial)
library(classInt)
library(sf)
#library(osmdata)
library(ggmap)
library(concaveman)
library(osmdata)
library(osmar)
library(spdep)
library(dbscan)
library(spdep)
library(rgeos)
gm_lsoa %>% count(LSA11CD)
gm_lsoa %>% count(LSOA11CD)
load("C:/Users/msassaw5/Dropbox (The University of Manchester)/Research/Modelling Bikes - Manchester 2020/Data/all_data_001.RData")
gm_lsoa %>% table(LSOA11CD)
gm_lsoa %>% count(LSOA11CD)
gm_lsoa %>% as.data.frame() %>% count(LSOA11CD)
joined_data_all %>% summary(accident_index)
joined_data_all %>% count(accident_index)
View(joined_data_all)
View(joined_data_all$x)
View(joined_data_all$geometry.x)
View(joined_data_all$geometry.y)
names(joined_data_all)
joined_data_all %>% group_by(voronoi_id) %>% count(accident_index)
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% count(accident_index)
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% sum(accident_index)
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% tally(accident_index)
joined_data_all %>% mutate(accident_bin=ifelse(is.na(acc_id)==T,0,1))
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% tally(accident_bin)
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% count(accident_bin)
joined_data_all=joined_data_all %>% mutate(accident_bin=ifelse(is.na(acc_id)==T,0,1))
joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% count(accident_bin)
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% count(accident_bin)
View(temp)
joined_data_all=joined_data_all %>% mutate(accident_bin=ifelse(is.na(acc_id)==T,NA,1))
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% count(accident_bin)
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% sum(accident_bin)
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% summarise(sum(accident_bin))
joined_data_all=joined_data_all %>% mutate(accident_bin=ifelse(is.na(acc_id)==T,0,1))
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% summarise(sum(accident_bin))
temp=joined_data_all %>% as.data.frame() %>% group_by(voronoi_id) %>% summarise(acc_no=sum(accident_bin))
joined_data_all = joined_data_all %>% left_join(temp)
library(rstanarm)
?pp_check
1/2
1/35
library(rcompendium)
?rcompendium
?new_package
?add_readme_rmd
add_readme_rmd()
library(rcompendium)
exp(0.042)
exp(0.071)
exp(0.055)
exp(-1.2)
exp(-1.3)
exp(1.7)
exp(1.4)
library(sem)
?sem::specify.model
##### libraries ####
library(tidyverse)
library(stargazer)
# README ####
# the commands here reproduce all plots and tables in the manuscript. Before running commands in here, all data need to be read in (data_prep.R), analysis carried out (analysis.R) and some wrapper functions for plotting read in (functions_modelling_plotting.R).
#This function loads the data
source("code/data_prep.R")
setwd("C:/Users/msassaw5/Dropbox (The University of Manchester)/GitHub/GT-migr-forecasts")
# README ####
# the commands here reproduce all plots and tables in the manuscript. Before running commands in here, all data need to be read in (data_prep.R), analysis carried out (analysis.R) and some wrapper functions for plotting read in (functions_modelling_plotting.R).
#This function loads the data
source("code/data_prep.R")
# Figure 1: trends ####
pl.dat=  ggplot(pl.dati) +
geom_text(aes(x=2007,y=57,label="Romania joins the EU"), angle=90,nudge_x = -0.2, colour="grey25",size=4.5,family="Palatino") +
geom_vline(xintercept = 2007,colour="darkgrey",linetype="dashed") +
geom_text(aes(x=2012,y=50,label="Latest update to Google Trends"), angle=90,nudge_x = -0.25, colour="grey25",size=4.5,family="Palatino") +
geom_vline(xintercept = 2011.98,colour="darkgrey",linetype="dashed") +
geom_vline(xintercept = 2016.475,colour="darkgrey",linetype="dashed") +
geom_line(data=. %>% filter(cluster!="all"),aes(x=year,y=value,group=name,colour=cluster,linetype=cluster),size=1,alpha=0.3) +
scale_x_continuous(expand = c(0,0.2)) +
scale_linetype_manual(values=c("solid","dashed", "twodash", "longdash", "1333", "6246" )) +
geom_line(data=pl.datiav,aes(x=year,y=cluster_mean,colour=cluster,linetype=cluster), size=2) +
geom_point(aes(x=year,y=exp(Raw_IPS), shape="immigration (IPS)"),colour="blue",size=4.5, alpha=0.9) +
geom_text(aes(x=2016.475,y=15,label="Brexit referendum"), angle=90,nudge_x = -0.25, colour="grey25",size=4.5,family="Palatino") +
theme_bw() +
theme(axis.text.x = element_text(size=13),
axis.title = element_text(size=12),
legend.text = element_text(size=14),
legend.title = element_text(size=14),
legend.position = "right",
legend.key.size = unit(c(1.1),units = "cm")
) +
labs(y="Value (Google Trends Index | immigration in 1,000 persons)", x="Year") +
scale_shape_discrete(name="")
pl.dat
ggsave(filename = "graphs/GTI_Mig_ts.pdf",device = "pdf",plot = pl.dat,width = 10,height=5.5)
#Figure 2: GTI lags ####
pl.lag=data_mig2 %>%
separate(col = GTI,into=c("GTI","lag","cluster"),sep="[\\_.]") %>%
mutate(lag=as_factor(lag), cluster=cluster %>%
as_factor() %>%
fct_relevel("all","currency","education","employment","housing","control")) %>%
filter(year>2012) %>%
ggplot() +
geom_line(aes(x = year, y = exp(value), colour=lag,group=(lag)), size = 1) +
scale_color_viridis_d(option="inferno",end = 0.9) +
geom_point(aes(x = year, y = exp(Raw_IPS), shape="immigration"), size = 4, color = "blue") +
scale_linetype_manual(values=c("solid","dashed", "twodash", "longdash","1333", "6246" )) +
facet_grid(.~cluster) +
theme_bw() +
theme(axis.text.x = element_text(size=13),
axis.title = element_text(size=12),
legend.text = element_text(size=11),
legend.title = element_text(size=14),
legend.position = "right",
strip.text = element_text(size=12)
# legend.key.size = unit(c(.9),units = "cm")
) +
labs(y="Value (Google Trends Index | immigration in 1,000 persons)", shape="")
pl.lag
ggsave(filename = "graphs/GTI_lags.pdf",device = "pdf",plot = pl.lag,width = 12, height=5)
#Figure A1: model for IPS SE vs observed IPS ####
# to create a prior for sigma of IPS data
pl.ipsse=ggplot(data=data_an) +
geom_point(aes(x=log(Raw_IPS),y=log(IPSSEpc/(1-IPSSEpc)))) +
geom_smooth(aes(x=log(Raw_IPS),y=log(IPSSEpc/(1-IPSSEpc)),
colour="Model (2)",fill="Model (2)"),
method="lm",formula=y~x-1,alpha=0.2) +
geom_smooth(aes(x=log(Raw_IPS),y=log(IPSSEpc/(1-IPSSEpc)),colour="Model (1)",fill="Model (1)"),method="lm",formula=y~x,alpha=0.1) +
geom_text(aes(x=log(Raw_IPS),y=log(IPSSEpc/(1-IPSSEpc)),label=lubridate::year(Date)),size=3,nudge_x = 0.1,nudge_y = .05) +
theme_bw() +
theme(axis.text.x = element_text(size=13),
axis.title = element_text(size=12),
legend.text = element_text(size=14),
legend.title = element_text(size=14)) +
labs(x="IPS point estimate (natural logarithm)",
y="logit of the IPS relative standard error", colour="Fit",fill="Fit")
pl.ipsse
ggsave(filename = "Graphs/IPS_rse.pdf",device = "pdf",plot = pl.ipsse,width = 8,height=5.5)
# making a plot of errors ####
## plot of errors Fig 3 and A2####
#this and further plots require sourcing functions_modelling_plotting.R
# source("code/functions_modelling_plotting.R")
pl2018_3=plot_error(res = results022018_30,pl_fct = 35,year.f = 2018, label = "; sample starting 2013")
source("code/functions_modelling_plotting.R")
# making a plot of errors ####
## plot of errors Fig 3 and A2####
#this and further plots require sourcing functions_modelling_plotting.R
# source("code/functions_modelling_plotting.R")
pl2018_3=plot_error(res = results022018_30,pl_fct = 35,year.f = 2018, label = "; sample starting 2013")
load("output/results_all.RData")
# making a plot of errors ####
## plot of errors Fig 3 and A2####
#this and further plots require sourcing functions_modelling_plotting.R
# source("code/functions_modelling_plotting.R")
pl2018_3=plot_error(res = results022018_30,pl_fct = 35,year.f = 2018, label = "; sample starting 2013")
pl2019_3=plot_error(res = results022019_30,pl_fct = 6,year.f = 2019, label = "; sample starting 2013",y.lab=F)
pl2018_31=plot_error(res = results022018_31,pl_fct = 35,year.f = 2018, label = "; sample with 2012 data")
pl2019_31=plot_error(res = results022019_31,pl_fct = 6,year.f = 2019, label = "; sample with 2012 data",y.lab=F)
pl2018_32=plot_error(res = results022018_32,pl_fct = 35,year.f = 2018, label = "; differences of the GTI used as predictor")
pl2019_32=plot_error(res = results022019_32,pl_fct = 6,year.f = 2019, label = "; differences of the GTI used as predictor",y.lab=F)
pl2018_3
pl2019_3
pl2019_3=plot_error(res = results022019_30,pl_fct = 6,year.f = 2019, label = "; sample starting 2013",y.lab=T)
pl2019_3
g=ggarrange(plotlist=list(pl2018_3,pl2019_3), ncol=1,nrow=2, labels = NULL, legend ="right", common.legend = TRUE)
#Fig 3 ####
ggexport(g,filename= paste0("graphs/results_err.pdf"),width=10.5,height = 12.6)
g1=ggarrange(plotlist=list(pl2018_31,pl2019_31,pl2018_32,pl2019_32), ncol=2,nrow=2, labels = NULL, legend ="bottom", common.legend = TRUE, widths=c(1.05,1))
#Fig A2 ####
ggexport(g1,filename= paste0("graphs/results_err_rob.pdf"),
width=13,height = 13)
pl2018_31=plot_error(res = results022018_31,pl_fct = 35,year.f = 2018, label = "; sample with 2012 data",y.lab=F)
pl2019_31=plot_error(res = results022019_31,pl_fct = 6,year.f = 2019, label = "; sample with 2012 data")
pl2018_32=plot_error(res = results022018_32,pl_fct = 35,year.f = 2018, label = "; differences of the GTI used as predictor",y.lab=F)
pl2019_32=plot_error(res = results022019_32,pl_fct = 6,year.f = 2019, label = "; differences of the GTI used as predictor")
g1=ggarrange(plotlist=list(pl2018_31,pl2019_31,pl2018_32,pl2019_32), ncol=2,nrow=2, labels = NULL, legend ="bottom", common.legend = TRUE, widths=c(1.05,1))
#Fig A2 ####
ggexport(g1,filename= paste0("graphs/results_err_rob.pdf"),
width=13,height = 13)
#Fig A2 ####
ggexport(g1,filename= paste0("graphs/results_err_rob.pdf"),
width=13,height = 13)
#ploting errors####
plot_error = function(res=results022019,
input=data_mig2,
pl_fct=7,
year.f=2019,
label="",
y.lab=T,
y.labL=F,
y.labR=F){
clusters_name=res[[2]] %>% filter(parameter=="phi2") %>%
separate(GTI_lag,into = c("GTI_lag","cluster"),sep = "\\.") %>%
select(cluster) %>% unique()
temp=expand_grid(model=c("AR","RW"),clusters_name)
res.sum = res[[1]] %>%
left_join(input %>% pivot_wider(names_from="GTI",values_from="value")) %>%
#MASE is not used in the manuscript but can be calculated with small modifications to this code
mutate(ME=exp(Raw_IPS)-yhat,  MAPE=abs(exp(Raw_IPS)-yhat)/exp(Raw_IPS),
MASE=abs(exp(Raw_IPS)-yhat)/abs(exp(Raw_IPS)-exp(lagIPS))) %>% #RMSE=sqrt((exp(Raw_IPS)-yhat)^2), = ME
filter(year==year.f) %>%
# need to select MASE here if using
dplyr::select(Raw_IPS,year,model, GTI_lag, ME, MAPE)
res.phi = res[[2]] %>% filter(parameter=="phi2") %>%
separate(GTI_lag,into = c("GTI_lag","cluster"),sep = "\\.") %>%
left_join(temp, by="model") %>%
unite(cluster,c("cluster.x","cluster.y"),sep="",na.rm=T) %>%
mutate(model=case_when(model=="ADL" ~ "ARX", model=="RWDL"~"RWX",TRUE ~ model) %>% as_factor(),
GTI_lag=as_factor(GTI_lag))
p= res.sum %>%
mutate(MAPE=MAPE*100) %>%
# need to select MASE here if using
pivot_longer(cols = ME:MAPE, names_to=c("error")) %>%
separate(GTI_lag,into = c("GTI_lag","cluster"),sep = "\\.") %>%
left_join(temp, by="model") %>%
unite(cluster,c("cluster.x","cluster.y"),sep="",na.rm=T) %>%
# unite(model,c("model","GTI_lag"),sep=".",na.rm=T) %>%
mutate(model=case_when(model=="ADL" ~ "ARX", model=="RWDL"~"RWX",TRUE ~ model) %>% as_factor(),
GTI_lag=replace_na(GTI_lag," "),
GTI_lag=GTI_lag %>% str_replace("\\_","\\[") %>% str_c(ifelse(GTI_lag!=" ","]"," ")),
GTI_lag=as_factor(GTI_lag)) %>%#%>% fct_relevel("RW",after = 40)
ggplot() +
geom_point(aes(x=GTI_lag,y=value, colour=error, shape=error),size=3) +
geom_abline(intercept=0,slope=0,colour="darkgrey") +
geom_errorbar(data=res.phi,mapping = aes(x=as.numeric(GTI_lag)+0.2,y=mean*pl_fct, ymin=`2.5%`*pl_fct,ymax=`97.5%`*pl_fct,linetype=parameter, group=parameter), width=.2,size=0.9, alpha=0.8) +
geom_point(data=res.phi,mapping = aes(x=as.numeric(GTI_lag)+0.2,y=mean*pl_fct,fill=parameter, group=parameter), size=1, alpha=0.4) +
scale_y_continuous(sec.axis = sec_axis(~./pl_fct, name=expression("value (parameter "~phi[2]~")"))) +
scale_linetype_discrete(labels=list(bquote(phi[2]))) +
scale_fill_discrete(labels=list(bquote(phi[2]))) +
scale_x_discrete(labels=parse_format()) +
facet_grid(cluster~model,scales = "free_x",space = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(size=13, angle=90, vjust=0.5),
axis.title = element_text(size=12),
legend.text = element_text(size=14),
legend.title = element_text(size=14),
legend.position = "right",
axis.title.y.left = if (y.labL==F) element_blank() else element_text(size=12),
axis.title.y.right = if (y.labR==F) element_blank() else element_text(size=12),
axis.title.y = if (y.lab==F) element_blank() else element_text(size=12)
) +
labs(linetype="95% CI", fill="95% CI", x="GTI monthly lag",
y="1,000 persons (ME) or % (MAPE)", #(MASE x 100)
title = paste0("Forecast for ",year.f,label))
return(p)
}
pl2018_31=plot_error(res = results022018_31,pl_fct = 35,year.f = 2018, label = "; sample with 2012 data",y.labL=T,y.labR = F)
pl2019_31=plot_error(res = results022019_31,pl_fct = 6,year.f = 2019, label = "; sample with 2012 data",y.labL=F,y.labR = T)
pl2018_32=plot_error(res = results022018_32,pl_fct = 35,year.f = 2018, label = "; differences of the GTI used as predictor",y.labL=T,y.labR = F)
pl2019_32=plot_error(res = results022019_32,pl_fct = 6,year.f = 2019, label = "; differences of the GTI used as predictor",y.labL=F,y.labR = T)
g1=ggarrange(plotlist=list(pl2018_31,pl2019_31,pl2018_32,pl2019_32), ncol=2,nrow=2, labels = NULL, legend ="bottom", common.legend = TRUE, widths=c(1.05,1))
#Fig A2 ####
ggexport(g1,filename= paste0("graphs/results_err_rob.pdf"),
width=13,height = 13)
#Figs A3 and A4: plotting the forecasts ####
pl.2018=plot_forecast(res = results022018_30,lags = c("GT[4]","GT[12]"), year.f=2018, clusters=c("education","employment"),v1="GTI_lag",v2="model",v3="cluster",sc=150)
pl.2019=plot_forecast(res = results022019_30,year.f=2019)
ggsave(filename = "Graphs/GTI_forcast2018.pdf",device = "pdf",plot = pl.2018,width = 6.5,height=7.5)
ggsave(filename = "Graphs/GTI_forcast2019.pdf",device = "pdf",plot = pl.2019,width = 12,height=7)
##########
## assesssing uncertainty ####
pl.unc.2018= plot_uncertainty(res = results022018_30,year.f = 2018, label = "; sample starting 2013")
pl.unc.2019= plot_uncertainty(res = results022019_30,year.f = 2019, label = "; sample starting 2013")
# Fig A5 ####
g3=ggarrange(plotlist=list(pl.unc.2018,pl.unc.2019), ncol=1,nrow=2, labels = NULL, legend ="bottom", common.legend = TRUE)
ggexport(g3,filename= paste0("graphs/unc2013.pdf"),
width=10,height = 11)
